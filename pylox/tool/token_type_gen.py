TOKEN_TYPES = [
    # Single-character tokens.
    "LEFT_PAREN", "RIGHT_PAREN", "LEFT_BRACE", "RIGHT_BRACE",
    "COMMA", "DOT", "MINUS", "PLUS", "SEMICOLON", "SLASH", "STAR",

    # One or two character tokens.
    "BANG", "BANG_EQUAL",
    "EQUAL", "EQUAL_EQUAL",
    "GREATER", "GREATER_EQUAL",
    "LESS", "LESS_EQUAL",

    # Literals.
    "IDENTIFIER", "STRING", "NUMBER",

    # Keywords.
    "AND", "CLASS", "ELSE", "FALSE", "FUN", "FOR", "IF", "NIL", "OR",
    "PRINT", "RETURN", "SUPER", "THIS", "TRUE", "VAR", "WHILE",

    "EOF"
]

if __name__ == "__main__":
    with open("pylox/token_type.py", "w+") as f:
        f.write("# Auto-generated by tool/token_type_gen.py\n")
        f.write("from enum import Enum, unique\n")
        f.write("\n")
        f.write("@unique\n")
        f.write("class TokenType(Enum):\n")
        for i, token_type in enumerate(TOKEN_TYPES):
            f.write(f"    {token_type} = {i}\n")
        f.write("\n")
        f.write("    def __str__(self):\n")
        f.write("        return str(self.name)\n")